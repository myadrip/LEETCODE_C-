// https://leetcode.com/problems/invert-binary-tree/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void func(TreeNode** reverse, TreeNode* root)
    {
        if(root == NULL)
            return;
        
        (*reverse) = new TreeNode(root->val);
        
        func( &((*reverse)->left), root->right);
        func( &((*reverse)->right), root->left);
        
        return;
    }
    
    TreeNode* invertTree(TreeNode* root) 
    {
        TreeNode* ret = NULL;
        func(&ret, root);
        return ret;
    }
};
================================================================================================================

