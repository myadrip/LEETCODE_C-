/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        ListNode* ans = nullptr;
        ListNode* tail = nullptr;
        
        int new_val = 0;
        int carry = 0;
        ListNode* new_node = nullptr;
        
        while(l1 || l2)
        {
            if(l1 && l2)
            {
                new_val = l1->val + l2->val + carry;
                carry = new_val/10;
                new_val = new_val%10;
                l1 = l1->next;
                l2 = l2->next;
            }
            else if(l1)
            {
                new_val = l1->val + carry;
                carry = new_val/10;
                new_val = new_val%10;
                l1 = l1->next;
            }
            else if(l2)
            {
                new_val = l2->val + carry;
                carry = new_val/10;
                new_val = new_val%10;
                l2 = l2->next;
            }
            new_node = new ListNode(new_val);
            if(ans)
            {
                tail->next = new_node;
                tail = tail->next;
            }
            else
            {
                ans = new_node;
                tail = new_node;
            }
            
        }
        if(carry)
        {
            new_node = new ListNode(carry);
            tail->next = new_node;
            tail = tail->next;
        }
        return ans;
    }
};
