class Solution {
public:
    int numIslands(vector<vector<char>>& grid) 
    {
        int ans = 0;
        for(int i = 0; i < grid.size(); i++)
        {
            for(int j = 0; j < grid[0].size(); j++)
            {
                if(grid[i][j] == '1')
                {
                    DFS(grid, i, j);
                    ans++;
                }
            }
        }
        return ans;
    }
    
    void DFS(vector<vector<char>>& grid, int i, int j) 
    {
        if(valid_check(grid, i, j) == false)
            return;
        if(grid[i][j] == '0')
            return;
        
        grid[i][j] = '0';
        DFS(grid, i-1, j);
        DFS(grid, i+1, j);
        DFS(grid, i, j-1);
        DFS(grid, i, j+1);
        return;
    }
    bool valid_check(vector<vector<char>>& grid, int i, int j) 
    {
        if(i<0 || i>=grid.size() || j<0 || j>=grid[0].size())
            return false;
        return true;
    }
};
