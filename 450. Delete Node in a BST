/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int Left_max(TreeNode* root)
    {
        root = root->left;
        while(root->right)
        {
            root = root->right;
        }
        return root->val;
        
    }
    void helper(TreeNode* &root)
    {
        if(!root->left && !root->right)
            root = nullptr;
        else if(!root->left && root->right)
            root = root->right;
        else if(root->left && !root->right)
            root = root->left;
        else
        {
            root->val = Left_max(root);
            deleteNode(root->left,root->val);
        }
        
    }
    TreeNode* deleteNode(TreeNode* &root, int key) 
    {
        if(!root)
            return nullptr;
        
        if(root->val > key)
        {
            deleteNode(root->left, key);
        }
        else if(root->val < key)
        {
            deleteNode(root->right, key);
        }
        else
        {
            helper(root);            
        }
        
        return root;
    }
};
