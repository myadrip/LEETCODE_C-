//https://leetcode.com/problems/move-zeroes/

class Solution {
public:
    void moveZeroes(vector<int>& nums) 
    {
        int cnt = 0;
        
        for(int i = 0; i < nums.size(); i++)
        {
            if(nums[i] == 0)
                cnt++;
            else
            {
                nums[i-cnt]= nums[i];
            }
        }
        for(int i = nums.size()-cnt; i < nums.size(); i++)
        {
            nums[i] = 0;
        }
    }
};
====================================================================================================

class Solution {
public:
    void moveZeroes(vector<int>& nums) 
    {
        int cnt = 0;
        
        for(int i = 0; i < nums.size(); i++)
        {
            if(nums[i] == 0)
                cnt++;
            else
            {
                std::swap(nums[i-cnt], nums[i]);
            }
        }
    }
};
====================================================================================================
class Solution {
public:
    void moveZeroes(vector<int>& nums) 
    {
        for(int i = 0; i < nums.size(); i++)
        {
            if(nums[i] == 0)
            {
                for(int j = i+1; j < nums.size(); j++)
                {
                    if(nums[j] != 0)
                    {
                        nums[i] = nums[j];
                        nums[j] = 0;
                        break;
                    }
                    if(j == nums.size())
                        return;
                }
            }
        }
        return;
    }
};
