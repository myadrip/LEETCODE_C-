// https://leetcode.com/problems/maximum-depth-of-binary-tree/

class Solution 
{
public:
    
    int func(TreeNode* root) 
    {
        if(root->left == NULL && root->right == NULL)
            return 1;
        int left = INT_MIN;
        int right = INT_MIN;
        
        if(root->left)
            left = func( root->left ) + 1;
        if(root->right)
            right = func(root->right) + 1;
        
        return max(left, right);
    }
    
    int maxDepth(TreeNode* root) 
    {
        if(root)
            return func(root) ;
        else
            return 0;
    }
};

=============================================================================================================================

class Solution {
public:
    int maxDepth(TreeNode* root) 
    {
        if(root == NULL)
            return 0;
        int left = maxDepth(root->left) + 1;
        int right = maxDepth(root->right) + 1;
        
        return max(left, right);
        
    }
};


