// https://leetcode.com/problems/top-k-frequent-elements/

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) 
    {
        unordered_map<int, int> map;
        
        for(int num : nums)
                map[num]++;
        
        vector<int> res(k);
        
        priority_queue<pair<int, int>> pq;
        
        for(auto it = map.begin(); it != map.end(); it++)
        {
            pq.push(make_pair(it->second, it->first));
        }
        for(int i = 0; i < k; i++)
        {
            res[i] = pq.top().second;
            pq.pop();
        }
        
        return res;
    }
};

================================================================================
