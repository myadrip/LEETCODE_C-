//https://leetcode.com/problems/kth-smallest-element-in-a-bst/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void search(TreeNode* root, vector<int>& v)
    {
        if(!root)
            return;
        v.push_back(root->val);
        search(root->left, v);
        search(root->right, v);
        return;
    }
    
    int kthSmallest(TreeNode* root, int k) 
    {
        std::vector<int> v;
        search(root, v);
        
        std::sort(v.begin(), v.end());
        
        return v[k-1];
    }
};

===============================================================================================

