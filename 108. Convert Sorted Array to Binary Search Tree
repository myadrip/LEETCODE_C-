//https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void func(vector<int>& nums, int left, int right, TreeNode** node) 
    {
        if(left > right)
            return;
        int mid = (right + left)/2;
        *node = new TreeNode(nums[mid]);
        func(nums, left, mid-1, &((*node)->left));
        func(nums, mid+1, right, &((*node)->right));
        return;        
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) 
    {
        TreeNode* root = nullptr;
        
        func(nums, 0, nums.size()-1, &root);
        
        
        return root;
    }
};
