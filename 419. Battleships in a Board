class Solution {
public:
    int countBattleships(vector<vector<char>>& board) {
        int m = board.size();
        int n = board[0].size();
        int ans = 0;
            
        for(int i = 0; i < m; i++)
        {
            for(int j = 0; j < n; j++)
            {
                if(DFS(board, i, j))
                    ans++;
            }
        }
        
        return ans;
    }
    
    bool DFS(vector<vector<char>>& board, int i, int j)
    {
        if(valid_check(board, i, j) == false)
            return false;
        if(board[i][j] == 'X')           
        {
            // -1 : visited
            board[i][j] = -1;
            DFS(board, i-1, j);
            DFS(board, i+1, j);
            DFS(board, i, j-1);
            DFS(board, i, j+1);
            return true;
        }
        return false;
        
    }
    
    bool valid_check(vector<vector<char>>& board, int i, int j)
    {
        if(i<0 || i>=board.size() || j<0 || j>=board[0].size())
            return false;
        else
            return true;
    }
};
