class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        unordered_set<string> st(wordList.begin(), wordList.end());
        queue<string> q;
        int ans = 1;
        
        q.push(beginWord);
        
        while(!q.empty())
        {
            int n = q.size();
            
            while(n--)
            {
                string tmp = q.front();
                q.pop();
                st.erase(tmp);
                
                if(tmp == endWord)
                    return ans;
                
                for(int pos = 0; pos < tmp.size(); pos++)
                {
                    char c = tmp[pos];
                    
                    for(int i = 'a'; i <= 'z'; i++)
                    {
                        tmp[pos] = i;
                        if(st.find(tmp) != st.end())
                            q.push(tmp);
                    }
                    tmp[pos] = c;                    
                }                
            }
            ans++;
        }
        return 0;
        
    }
};
