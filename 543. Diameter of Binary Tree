//https://leetcode.com/problems/diameter-of-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int func(TreeNode* root, int& length)
    {
        if(root == NULL)
            return 1;
        
        int left = 0;
        int right = 0;
        if(root->left)            
            left = func(root->left, length) +1;
        if(root->right)
            right = func(root->right, length) +1;
        
        if(abs(left + right) > length)
            length = abs(left + right);
        
        return max(left, right);
    }
    
    int diameterOfBinaryTree(TreeNode* root) 
    {
        int ret = 0;
        func(root, ret);
        
        return ret;
    }
};
