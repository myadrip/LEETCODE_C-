class Solution {
public:
    void DFS(vector<vector<char>>& board, int i, int j, int &row, int &col)
    {
        if( i<0 || i>=row || j<0 || j>=col)
            return;
        if(board[i][j]=='O')
        {
            board[i][j]='P';
            DFS(board, i-1, j, row, col);
            DFS(board, i+1, j, row, col);
            DFS(board, i, j-1, row, col);
            DFS(board, i, j+1, row, col);
        }
        return;
    }
    
    void solve(vector<vector<char>>& board) 
    {
        int row = board.size();
        int col = board[0].size();
        
        for(int i = 0 ; i < col; i++)
        {
            DFS(board, 0,       i, row, col);
            DFS(board, row-1,   i, row, col);
        }
            
        
        for(int i = 0; i < row; i++)
        {
            DFS(board, i,   0,      row, col);
            DFS(board, i,   col-1,  row, col);
        }
        
        for(int i = 0; i < row; i++)
        {
            for(int j = 0; j < col; j++)
            {
                if(board[i][j] == 'P')
                    board[i][j] = 'O';
                else if(board[i][j] == 'O')
                    board[i][j] = 'X';
            }
        }
        return;
    }
    
};

========================================================================

